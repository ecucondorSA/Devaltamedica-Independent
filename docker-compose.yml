version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: altamedica-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-altamedica}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-altamedica123}
      POSTGRES_DB: ${POSTGRES_DB:-altamedica}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - altamedica-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U altamedica"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: altamedica-redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - altamedica-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Main Application
  app:
    build:
      context: .
      dockerfile: Dockerfile.optimized
      args:
        NODE_ENV: ${NODE_ENV:-development}
    container_name: altamedica-app
    env_file:
      - .env.docker
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-altamedica}:${POSTGRES_PASSWORD:-altamedica123}@postgres:5432/${POSTGRES_DB:-altamedica}
      REDIS_URL: redis://redis:6379
      NODE_ENV: ${NODE_ENV:-development}
    volumes:
      - ./apps:/app/apps:delegated
      - ./packages:/app/packages:delegated
      - ./config:/app/config:ro
      - node_modules:/app/node_modules
      - pnpm_store:/app/.pnpm-store
    ports:
      - "3000:3000"  # Web App
      - "3001:3001"  # API
      - "3002:3002"  # Admin Panel
      - "8888:8888"  # WebRTC Signaling
    networks:
      - altamedica-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: sh -c "pnpm install && pnpm run dev"
    restart: unless-stopped

  # PgAdmin for Database Management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: altamedica-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@altamedica.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - altamedica-network
    depends_on:
      - postgres

  # Prometheus for Monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: altamedica-prometheus
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    ports:
      - "9090:9090"
    networks:
      - altamedica-network
    restart: unless-stopped

  # Grafana for Metrics Visualization
  grafana:
    image: grafana/grafana:latest
    container_name: altamedica-grafana
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin123
      GF_INSTALL_PLUGINS: grafana-piechart-panel,redis-datasource
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./grafana/datasources:/etc/grafana/provisioning/datasources:ro
    ports:
      - "3003:3000"
    networks:
      - altamedica-network
    depends_on:
      - prometheus
    restart: unless-stopped

  # Nginx Reverse Proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: altamedica-nginx
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./config/nginx/sites:/etc/nginx/sites-enabled:ro
    ports:
      - "80:80"
      - "443:443"
    networks:
      - altamedica-network
    depends_on:
      - app
    restart: unless-stopped

networks:
  altamedica-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  node_modules:
    driver: local
  pnpm_store:
    driver: local
  pgadmin_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local