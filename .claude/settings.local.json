{
  "permissions": {
    "allow": [
      "Bash(tsup)",
      "Bash(pnpm -w list react react-dom)",
      "Bash(pnpm why:*)",
      "Bash(mv:*)",
      "Bash(node:*)",
      "Bash(npm install:*)",
      "Bash(pnpm --filter @altamedica/auth build)",
      "Bash(pnpm install:*)",
      "Bash(rm:*)",
      "Bash(Remove-Item -Path \"C:\\Users\\Eduardo\\Documents\\devaltamedica\\packages\\auth\\src\\sso-client.ts\" -Force)",
      "Bash(true)",
      "Bash(pnpm exec:*)",
      "Bash(powershell:*)",
      "Bash(gh auth:*)",
      "Bash(gh repo create:*)",
      "Bash(gh repo edit:*)",
      "Bash(git remote set-url:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(gh run list:*)",
      "Bash(gh run view:*)",
      "Bash(gh pr create --title \"feat: CI/CD pipeline + Healthcare platform inicial\" --body \"## üöÄ Cambios principales\n\n- Pipeline CI/CD completo con GitHub Actions\n- Workflows optimizados para monorepo\n- Configuraci√≥n de Turbo y Codecov\n- Sistema de autenticaci√≥n Firebase\n- Plataforma de telemedicina\n\n## ‚úÖ Checklist\n- [x] CI/CD configurado\n- [x] Tests configurados\n- [x] Documentaci√≥n actualizada\n- [x] Secrets configurados localmente\" --base main)",
      "Bash(gh pr view:*)",
      "Bash(pnpm add:*)",
      "Bash(echo $PATH)",
      "Bash(pwsh:*)",
      "Bash(npm:*)",
      "Bash(pnpm:*)",
      "Bash(claude)",
      "Bash(gh secret set:*)",
      "Bash(git worktree:*)",
      "Bash(mkdir:*)",
      "Bash(cp:*)",
      "Bash(del count-large-files.js)",
      "Bash(del scriptsanalyze-missing-deps.js scriptscheck-peer-deps.js)",
      "Bash(npx eslint:*)",
      "Bash(timeout 30s npx eslint src/services/patient-export/request/notification.service.ts --fix)",
      "Bash(find:*)",
      "Bash(grep:*)",
      "Bash(npx tsc:*)",
      "Bash(for dir in packages/tailwind-config packages/typescript-config packages/eslint-config packages/config-next)",
      "Bash(do echo \"Checking $dir:\")",
      "Bash(if [ -f \"$dir/src/index.ts\" ])",
      "Bash(then echo \"  ‚úÖ Has src/index.ts\")",
      "Bash(else echo \"  ‚ùå Missing src/index.ts\")",
      "Bash(fi)",
      "Bash(done)",
      "Bash(npx tsup:*)",
      "Bash(firebase login:ci:*)",
      "Bash(npx next build:*)",
      "Bash(git config:*)",
      "Bash(NODE_ENV=production pnpm build)",
      "Bash(rg:*)",
      "Read(//home/edu/.claude/**)",
      "Bash(tsup:*)",
      "Bash(timeout 60s npx tsc --noEmit)",
      "Bash(timeout 30s npx eslint src/ --fix --ext .ts,.tsx)",
      "Bash(timeout 30s npx eslint src/ --fix)",
      "Bash(sudo docker builder build:*)",
      "Bash(docker build:*)",
      "Bash(chmod:*)",
      "Bash(pkill:*)",
      "Bash(git rm:*)",
      "Bash(git log:*)",
      "Bash(git log:*)",
      "Bash(timeout:*)",
      "Bash(sed:*)",
      "Bash(turbo lint:*)",
      "Bash(cat:*)",
      "Bash(for:*)",
      "Bash(do)",
      "Bash(if [[ ! \"$file\" =~ \"node_modules\" ]])",
      "Bash(then)",
      "Bash(echo \"Processed: $file\")"
    ],
    "deny": [],
    "ask": [],
    "additionalDirectories": [
      "C:\\c\\Users\\Eduardo\\Documents\\devaltamedica\\apps",
      "C:\\Users\\Eduardo\\Documents\\devaltamedica-validate",
      "/home/edu"
    ]
  },
  "outputStyle": "node-functional"
}
